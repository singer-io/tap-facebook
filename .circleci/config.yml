version: 2.1

orbs:
  slack: circleci/slack@3.4.2

executors:
  docker-executor:
    docker:
      - image: 218546966473.dkr.ecr.us-east-1.amazonaws.com/circle-ci:stitch-tap-tester

jobs:
  build:
    executor: docker-executor
    steps:
      - run: echo 'CI done'
  ensure_env:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: 'Setup Virtual Env'
          command: |
            python3 -m venv /usr/local/share/virtualenvs/tap-facebook
            source /usr/local/share/virtualenvs/tap-facebook/bin/activate
            pip install 'pip==21.1.3'
            pip install 'setuptools==56.0.0'
            pip install .[dev]
      - slack/notify-on-failure:
          only_for_branches: master
      - persist_to_workspace:
          root: /usr/local/share/virtualenvs
          paths:
            - tap-facebook
  # Regression Job Definitions
  run_pylint:
    executor: docker-executor
    steps:
      - checkout
      - attach_workspace:
          at: /usr/local/share/virtualenvs
      - run:
          name: 'Run pylint'
          command: |
            source /usr/local/share/virtualenvs/tap-facebook/bin/activate
            pylint tap_facebook -d C,R,W
      - slack/notify-on-failure:
          only_for_branches: master
  run_unit_tests:
    executor: docker-executor
    steps:
      - checkout
      - attach_workspace:
          at: /usr/local/share/virtualenvs
      - run:
          name: 'Run Unit Tests'
          command: |
            source /usr/local/share/virtualenvs/tap-facebook/bin/activate
            pip install nose coverage
            nosetests --with-coverage --cover-erase --cover-package=tap_facebook --cover-html-dir=htmlcov tests/unittests
            coverage html
      - store_test_results:
          path: test_output/report.xml
      - store_artifacts:
          path: htmlcov
      - slack/notify-on-failure:
          only_for_branches: master
  run_integration_tests:
    executor: docker-executor
    parallelism: 9
    steps:
      - checkout
      - attach_workspace:
          at: /usr/local/share/virtualenvs
      - run:
          name: 'Run Integration Tests'
          command: |
            aws s3 cp s3://com-stitchdata-dev-deployment-assets/environments/tap-tester/tap_tester_sandbox dev_env.sh
            source dev_env.sh
            mkdir /tmp/${CIRCLE_PROJECT_REPONAME}
            export STITCH_CONFIG_DIR=/tmp/${CIRCLE_PROJECT_REPONAME}
            source /usr/local/share/virtualenvs/tap-tester/bin/activate
            circleci tests glob "tests/*.py" | circleci tests split > ./tests-to-run
            if [ -s ./tests-to-run ]; then
              for test_file in $(cat ./tests-to-run)
              do
                run-test --tap=${CIRCLE_PROJECT_REPONAME} $test_file
              done
            fi
      - slack/notify-on-failure:
          only_for_branches: master
      - store_artifacts:
          path: /tmp/tap-facebook
  # Deploy Job Definitions
  git_tag:
    executor: docker-executor
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - '18:3e:7f:b6:39:58:d3:0f:70:54:32:d6:3e:d7:13:4e'
      - attach_workspace:
          at: /usr/local/share/virtualenvs
      - run: source /usr/local/share/virtualenvs/tap-facebook/bin/activate
      - run:
          name: 'Create git tag'
          command: |
            version=$(python setup.py --version)
            git config user.email "stitchintegrationdev@talend.com"
            git config user.name "${CIRCLE_USERNAME}"
            git tag -a v"${version}" -m "version ${version}"
            git push --tags
  push_pypi:
    executor: docker-executor
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - '18:3e:7f:b6:39:58:d3:0f:70:54:32:d6:3e:d7:13:4e'
      - attach_workspace:
          at: /usr/local/share/virtualenvs
      - run: source /usr/local/share/virtualenvs/tap-facebook/bin/activate
      - run:
          name: 'Build and Upload'
          command: |
            pip install twine
            python setup.py sdist --dist-dir dist
            twine upload --username $PYPI_USERNAME --password $PYPI_PASSWORD ./dist/*
      - slack/notify-on-failure:
          only_for_branches: master
      - slack/notify:
          message: ':green_circle: A new version of the tap has been tagged and released'

workflows:
  version: 2
  commit:
    jobs:
      - ensure_env:
          context:
            - circleci-user
            - tier-1-tap-user
      - run_pylint:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - ensure_env
      - run_unit_tests:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - ensure_env
      - run_integration_tests:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - ensure_env
      - build:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - run_pylint
            - run_unit_tests
            - run_integration_tests
      - git_tag:
          context: circleci-user
          requires:
            - build
          filters:
            branches:
              only: master
      - push_pypi:
          context: circleci-user
          requires:
            - git_tag
          filters:
            branches:
              only: master

  build_daily:
    jobs:
      - ensure_env:
          context:
            - circleci-user
            - tier-1-tap-user
      - run_pylint:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - ensure_env
      - run_unit_tests:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - ensure_env
      - run_integration_tests:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - ensure_env
      - build:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - run_pylint
            - run_unit_tests
            - run_integration_tests
    triggers:
      - schedule:
          cron: "0 1 * * *"
          filters:
            branches:
              only:
                - master
